<!DOCTYPE HTML>
<head>
  <meta charset="utf-8">
  <title>Barhopper</title>

    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

  <link rel='stylesheet' type='text/css' href='/stylesheets/barhopper.css'>
  <link rel='stylesheet' href='https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css'>
  <script src = "https://ajax.googleapis.com/ajax/libs/jquery/1.12.0/jquery.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-easing/1.3/jquery.easing.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
  <script src="https://unpkg.com/vue@2.3.3"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/vue-resource/1.2.0/vue-resource.js"></script>
  <script type="text/javascript" src="/javascripts/scrolling-nav.js" charset="utf-8"></script>
</head>

<html>
<body>

  <nav class="navbar navbar-default navbar-fixed-top" role="navigation">
    <div class="container-fluid">
      <div class="navbar-header">
        <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target=".navbar-ex1-collapse">
                    <span class="sr-only">Toggle navigation</span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
        <a class="navbar-brand page-scroll", href="/">Home</a>
      </div>

      <div class="collapse navbar-collapse navbar-ex1-collapse">
        <ul class="nav navbar-nav navbar-left">
          <li><a class="page-scroll" href="#about">About</a></li>
          <li><a class="page-scroll" href="#bars">Bars</a></li>
          {{#if user}}
          <li><a href="/logout" id="id_logout">Logout</a></li>
          {{else}}
          <li><a class="page-scroll" href="#login" data-toggle="modal" data-target="#loginModal">Login</a></li>
          <li><a class="page-scroll" href="#signup" data-toggle="modal" data-target="#signupModal">Signup</a></li>
          {{/if}}
        </ul>
      </div>
    </div>

  </nav>

  <section id="intro" class="intro-section">
           <div class="container">
               <div class="row">
                   <div class="col-lg-12" id="root" >
                     <input v-model="location">
                     <button @click="searchLocation" id="search">Search</button>
                     <bar v-for="business in businesses" :key="business.id" class="searchResult" :data="business" :user="user" v-on:respond="respond">
                     </bar>
                  </div>
              </div>
              <div class="row">
                <div class="col-lg-12" id="map"></div>
              </div>
          </div>
  </section>

<!-- Login modal-->
<div id="loginModal" class="modal fade" role="dialog">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal">&times;</button>
        <h4 class="modal-title"> Log in</h4>
      </div>
      <div class="modal-body">
        <form action="/login" method="post">
          <div class="form-group">
            <label>Email</label>
            <input type="text" class="form-control" name="email">
          </div>
          <div class="form-group">
            <label>Password</label>
            <input type="password" class="form-control" name="password">
          </div>

          <button type="submit" class="btn btn-warning btn-lg">Login</button>
        </form>
      </div>
    </div>
  </div>
</div>

<!--Sign up modal-->
<div id="signupModal" class="modal fade" role="dialog">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal">&times;</button>
        <h4 class="modal-title"> Sign up</h4>
      </div>
      <div class="modal-body">
        <form action="/signup" method="post">
          <div class="form-group">
            <label>Email</label>
            <input type="text" class="form-control" name="email">
          </div>
          <div class="form-group">
            <label>Password</label>
            <input type="password" class="form-control" name="password">
          </div>

          <button type="submit" class="btn btn-warning btn-lg">Signup</button>
        </form>
      </div>
    </div>
  </div>
</div>

  <script>


//vue
  var businessStorage = {
    fetch: function () {
      var businesses = JSON.parse(localStorage.getItem('businesses') || '[]');
    //  businesses.forEach(function (business, index) {
    //    business.id = index;
    //  });
    businessStorage.uid = businesses.length;
    return businesses
    },
  save: function(businesses) {
    localStorage.setItem('businesses', JSON.stringify(businesses))
  },
  clear: function() {
    localStorage.removeItem('businesses');
  }
  };

  function isLoggedIn(){
    var u="{{user.local.email}}";
    if(u.length>0){
      return true;}
    return false;
  }

  $("#id_logout").on('click', function(){
    businessStorage.clear();
  });

  Vue.component('bar', {
    props: ['data', 'user'],
    template: "<div ><span><img class='resultimg' :src='data.image_url'></span><span class='textsp'><a :href='data.url'><h2>${data.name}<img :src='data.rating_img_url_small'></h2></a><p id='snippet'> ${data.snippet_text} </p><p v-if='data.is_closed==false'>Open now</p></span><span><p>${data.going} going</p></span><span v-if=user><button v-if=data.userIsGoing v-on:click='respond(data)'>You're going</button><button v-else v-on:click='respond(data)'>RSVP</button></span></div>",
    delimiters: ['${', '}'],
    methods: {
    respond(business){
      this.$emit('respond', business);
    },
    unrespond(business){
      this.$emit('unrsvp', business);
    },
  },
});

  new Vue({
    el: '#root',
    delimiters: ['${', '}'],
    data: function() {return {
      location:"",
      businesses: businessStorage.fetch(),
      user: isLoggedIn(),
    }
    },
    methods: {
      searchLocation(){
        var address = "/search/?location="+this.location;
        var vm=this;
        //API call to yelp
        this.$http.get(address)
          .then(function(data){
            this.businesses=data.body.businesses;
            var bars=[]
            var ids=[]
            //Check which bars are in the database, i.e someone RSVPed
            this.$http.get("/bars")
            .then(function(result){
              console.log(result)
              result.data.forEach(function(bar){
                b=vm.businesses.filter(function(item){return item.id==bar.yelpid});
                if(b.length>0){
                  b[0].going=bar.answers.length;
                  b[0].userIsGoing=bar.userIsGoing;
                }
              });
              console.log(vm.businesses)
              localStorage.setItem('businesses', JSON.stringify(vm.businesses));
            })
          });
      },
      //RSVP
      respond(business){
        console.log("bla1")
        var vm=this;
        if(!business.userIsGoing){
        var address="/bars/" + business.id;
        console.log(address)
        var index=vm.businesses.indexOf(business)
        this.$http.post(address)
        .then(function(result){
          //Needs to be this complicated, because businesses is an array
          var newObject = Object.assign({}, vm.businesses[index], {going: result.data.answers.length, userIsGoing: true});
          vm.$set(vm.businesses, index, newObject);
        });
      }
      else{
        var address="/bars/delete/" + business.id;
        var index=vm.businesses.indexOf(business);
        this.$http.post(address)
        .then(function(result){
          console.log(result)
          var newObject = Object.assign({}, vm.businesses[index], {going: result.data.answers.length-1, userIsGoing: false});
          vm.$set(vm.businesses, index, newObject);
        });
      }
      },
    },


  });

  $("#search").on('click', function(){

    var data=businessStorage.fetch();
    console.log(data[0].location.coordinate)
    var map = new google.maps.Map(document.getElementById('map'), {
          zoom: 12,
          center: {lat: data[0].location.coordinate.latitude, lng: data[0].location.coordinate.longitude}
    });
    data.forEach(function(bar){
        var coord={lat: bar.location.coordinate.latitude, lng: bar.location.coordinate.longitude};
        var marker = new google.maps.Marker({
          position: coord,
          map: map
        });
      });
  });
</script>
<script
    src="https://maps.googleapis.com/maps/api/js?key=">
</script>



</body>
</html>
